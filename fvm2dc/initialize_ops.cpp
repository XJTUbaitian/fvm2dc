//
// auto-generated by ops.py
//

#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define OPS_2D
#include "ops_lib_cpp.h"

#include "globalvars.h"

void initialize()

{

  fvm2d_grid = ops_decl_block(2, "fvm2d_grid");

  int d_p[2] = {0, 0};
  int d_m[2] = {0, 0};
  int base[2] = {0, 0};
  int size[2] = {xL1 + 1, yM1 + 1};
  double *temp = NULL;

  size[0] = xL1 + 1;
  size[1] = 1;
  facex = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                       "facex");

  size[0] = 1;
  size[1] = yM1 + 1;
  facey = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                       "facey");

  size[0] = xL1;
  size[1] = 1;
  cellx = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                       "cellx");

  size[0] = 1;
  size[1] = yM1;
  celly = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                       "celly");

  size[0] = xL1;
  size[1] = 1;
  celldx = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                        "celldx");

  size[0] = 1;
  size[1] = yM1;
  celldy = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                        "celldy");

  size[0] = xL1;
  size[1] = 1;
  facedx = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                        "facedx");

  size[0] = 1;
  size[1] = yM1;
  facedy = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                        "facedy");
  size[0] = xL1;
  size[1] = yM1;
  xvel0 = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                       "xvel0");
  yvel0 = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                       "yvel0");
  presscorr = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                           "presscorr");
  density = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                         "density");
  temperature = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp,
                             "double", "temperature");
  xvelhat = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                         "xvelhat");
  yvelhat = ops_decl_dat(fvm2d_grid, 1, size, base, d_m, d_p, temp, "double",
                         "yvelhat");
  ops_decl_const2("xmin", 1, "double", &xmin);
  ops_decl_const2("xmax", 1, "double", &xmax);
  ops_decl_const2("xcells", 1, "int", &xcells);
  ops_decl_const2("ymin", 1, "double", &ymin);
  ops_decl_const2("ymax", 1, "double", &ymax);
  ops_decl_const2("ycells", 1, "int", &ycells);
  ops_decl_const2("xL1", 1, "int", &xL1);
  ops_decl_const2("yM1", 1, "int", &yM1);

  ops_diagnostic_output();

  int s2D_00[] = {0, 0};
  S2D_00 = ops_decl_stencil(2, 1, s2D_00, "00");

  int s2D_00_P10[] = {0, 0, 1, 0};
  S2D_00_P10 = ops_decl_stencil(2, 2, s2D_00_P10, "00:10");

  int s2D_00_M10[] = {0, 0, -1, 0};
  S2D_00_M10 = ops_decl_stencil(2, 2, s2D_00_M10, "00:-10");

  int s2D_00_0P1[] = {0, 0, 0, 1};
  S2D_00_0P1 = ops_decl_stencil(2, 2, s2D_00_0P1, "00:01");

  int s2D_00_0M1[] = {0, 0, 0, -1};
  S2D_00_0M1 = ops_decl_stencil(2, 2, s2D_00_0M1, "00:0-1");

  int s2D_00_P10_M10_0P1_0M1[] = {0, 0, 1, 0, -1, 0, 0, 1, 0, -1};
  S2D_00_P10_M10_0P1_0M1 =
      ops_decl_stencil(2, 5, s2D_00_P10_M10_0P1_0M1, "00:10:-10:01:0-1");
}
